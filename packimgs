#!/bin/bash -e
#
echo "This is a WIP that doesn't work yet"
exit 1

SYSTEM=system.img
SIZE=2048
LOADER1_SIZE=8000
RESERVED1_SIZE=128
RESERVED2_SIZE=8192
LOADER2_SIZE=8192
ATF_SIZE=8192
BOOT_SIZE=229376

SYSTEM_START=0
LOADER1_START=64
RESERVED1_START=$(expr ${LOADER1_START} + ${LOADER1_SIZE})
RESERVED2_START=$(expr ${RESERVED1_START} + ${RESERVED1_SIZE})
LOADER2_START=$(expr ${RESERVED2_START} + ${RESERVED2_SIZE})
ATF_START=$(expr ${LOADER2_START} + ${LOADER2_SIZE})
BOOT_START=$(expr ${ATF_START} + ${ATF_SIZE})
ROOTFS_START=$(expr ${BOOT_START} + ${BOOT_SIZE})
OUT=out
echo LOADER1_START=$LOADER1_START
echo LOADER2_START=$LOADER2_START
echo ATF_START=$ATF_START
echo BOOT_START=$BOOT_START
echo ROOTFS_START=$ROOTFS_START

####
	dd if=/dev/zero of=${SYSTEM} bs=1M count=0 seek=$SIZE status=none

	# burn u-boot
	echo "Burn u-boot..."
	dd if=${OUT}/u-boot/idbloader.img of=${SYSTEM} seek=${LOADER1_START} conv=notrunc status=none

	dd if=${OUT}/u-boot/uboot.img of=${SYSTEM} seek=${LOADER2_START} conv=notrunc status=none
	dd if=${OUT}/u-boot/trust.img of=${SYSTEM} seek=${ATF_START} conv=notrunc status=none

####
#	echo "Burn boot..."
#	if [ ! -e ${BOOT_PATH} ]; then
#		echo -e "\e[31m CAN'T FIND BOOT IMAGE \e[0m"
#		exit 1
#	fi
#	dd if=${BOOT_PATH} of=${SYSTEM} seek=${BOOT_START} conv=notrunc status=none
#
#	echo "Burn rootfs..."
#	if [ ! -e ${ROOTFS_PATH} ]; then
#		echo -e "\e[31m CAN'T FIND ROOTFS IMAGE \e[0m"
#		exit 1
#	fi
#	dd if=${ROOTFS_PATH} of=${SYSTEM} seek=${ROOTFS_START} conv=notrunc status=none
#	dd if=/dev/zero of=${SYSTEM} count=2048 oflag=append conv=notrunc
#
	echo Updating GPT...
	parted -s ${SYSTEM} mklabel gpt
	parted -s ${SYSTEM} unit s mkpart loader1 ${LOADER1_START} $(expr ${RESERVED1_START} - 1)
	parted -s ${SYSTEM} unit s mkpart reserved1 ${RESERVED1_START} $(expr ${RESERVED2_START} - 1)
	parted -s ${SYSTEM} unit s mkpart reserved2 ${RESERVED2_START} $(expr ${LOADER2_START} - 1)
	parted -s ${SYSTEM} unit s mkpart loader2 ${LOADER2_START} $(expr ${ATF_START} - 1)
	parted -s ${SYSTEM} unit s mkpart atf ${ATF_START} $(expr ${BOOT_START} - 1)
	parted -s ${SYSTEM} unit s mkpart boot fat16 ${BOOT_START} $(expr ${ROOTFS_START} - 1)
	parted -s ${SYSTEM} unit s mkpart root ext4 ${ROOTFS_START} 100%
	parted -s ${SYSTEM} set 6 legacy_boot on
